#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -exo pipefail

# Install required packages
yum install -y openldap-clients sssd sssd-ldap oddjob-mkhomedir wget stress-ng

######################################
# Configure SSSD to use LDAP
######################################
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_authentication_and_authorization_in_rhel/configuring-sssd-to-use-ldap-and-require-tls-authentication_configuring-authentication-and-authorization-in-rhel
cat <<EOF > /etc/sssd/sssd.conf
[domain/default]
id_provider = ldap
autofs_provider = ldap
auth_provider = ldap
chpass_provider = ldap
ldap_uri = ldap://${ldap_domain}/
ldap_search_base = dc=example,dc=com
ldap_id_use_start_tls = false
cache_credentials = False
ldap_tls_reqcert = never
ldap_default_bind_dn = cn=Directory Manager
ldap_default_authtok_type = password
ldap_default_authtok = ${ldap_admin_password}
ldap_schema = rfc2307bis

[sssd]
services = nss, pam, autofs
domains = default

[nss]
homedir_substring = /home
EOF

chmod 600 /etc/sssd/sssd.conf
chown root:root /etc/sssd/sssd.conf
update-crypto-policies --set LEGACY

# Switch the authentication provider to sssd
authselect select sssd with-mkhomedir --force

# Enable SSH password authentication
echo "PasswordAuthentication yes" > /etc/ssh/sshd_config.d/50-cloud-init.conf

# Restart the SSH service and enable SSSD
systemctl restart sshd
systemctl enable sssd oddjobd --now

# Create sudo group for LDAP users with GID 2000
groupadd -g 2000 ldap-users

# Add sudo permissions for the LDAP users
cat <<EOF > /etc/sudoers.d/ldap-users
%ldap-users ALL=(ALL) ALL
EOF


##########################################
# Configure Cloudwatch agent
##########################################

# Install the CloudWatch agent
wget https://amazoncloudwatch-agent.s3.amazonaws.com/redhat/amd64/latest/amazon-cloudwatch-agent.rpm
rpm -U amazon-cloudwatch-agent.rpm
rm -rf amazon-cloudwatch-agent.rpm

# Create the CloudWatch agent configuration file
# Metrics: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html#CloudWatch-Agent-Configuration-File-Metricssection
# https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/metrics-collected-by-CloudWatch-agent.html#linux-metrics-enabled-by-CloudWatch-agent
cat <<EOF > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
{
  "metrics": {
    "metrics_collected": {
      "cpu": {
        "metrics_collection_interval": 10,
        "measurement": [
          "cpu_usage_idle",
          "cpu_usage_iowait",
          "cpu_usage_user",
          "cpu_usage_system"
        ]
      },
      "mem": {
        "metrics_collection_interval": 10,
        "measurement": [
          "mem_used_percent"
        ]
      },
      "disk": {
        "resources": [
          "/",
          "/boot"
        ],
        "measurement": [
          "total",
          "used_percent"
        ],
        "metrics_collection_interval": 10
      }
    }
  }
}
EOF

# Start the CloudWatch agent
/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
